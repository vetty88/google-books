{"version":3,"sources":["components/Grid/index.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/API.js","components/Saved/index.js","components/Nav/index.js","pages/Save.js","components/Form/index.js","components/Search/index.js","pages/Search.js","App.js","registerServiceWorker.js","index.js"],"names":["Container","fluid","children","className","Row","Col","size","split","map","join","Jumbotron","style","height","clear","paddingTop","textAlign","NoMatch","role","aria-label","query","axios","get","id","delete","savedBooks","post","Saved","props","savedBooks","savedbook","title","key","_id","src","image","alt","author","description","href","link","target","rel","onClick","handleDeleteButton","Nav","type","data-toggle","data-target","aria-controls","aria-expanded","window","location","includes","SaveBook","state","API","then","res","componentDidMount","catch","err","console","log","setState","data","this","Component","Form","value","search","name","placeholder","onChange","handleInputChange","handleFormSubmit","Search","books","book","event","handleSavedButton","buttonText","SearchBooks","error","message","preventDefault","items","Error","results","result","volumeInfo","authors","imageLinks","thumbnail","infoLink","filter","App","exact","path","component","Save","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.3417211c.chunk.js","sourcesContent":["import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron() {\n  return (\n    <div\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n      className=\"jumbotron\"\n    >\n      <h1 className=\"text-white pt-5 jumboTitle\">Google Books</h1>\n      <h3 className=\"text-white pt-5 jumboText\">Find and Save Books of Interest</h3>\n    </div>\n  );\n}\n\nexport default Jumbotron;","import React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nfunction NoMatch() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>404 Page Not Found</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                ðŸ™„\n              </span>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NoMatch;\n","import axios from \"axios\";\n\nexport default {\n    // Get book from google search \n    getGoogleSearchBooks: function(query) {\n        return axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + query)\n    },\n  // Gets all books\n  getBooks: function() {\n    return axios.get(\"/api/books\");\n  },\n  // Gets the book with the given id\n  getBook: function(id) {\n    return axios.get(\"/api/books/\" + id);\n  },\n  // Deletes the book with the given id\n  deleteBook: function(id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves a book to the database\n  saveBook: function(savedBooks) {\n    return axios.post(\"/api/books\", savedBooks);\n  }\n};\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Saved = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"searchContainer\">\r\n          {props.savedBooks.map((savedbook) => {\r\n            return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"row no-gutters\" \r\n                   id={savedbook.title}\r\n                  key={savedbook._id}>\r\n                <div className=\"col-sm-3\">\r\n                <img \r\n                  key\r\n                  src={savedbook.image} \r\n                  alt={savedbook.title} \r\n                  className=\"img-fluid card-image mt-3\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-sm-9\">\r\n                  <div className=\"card-body\">\r\n                    <h3 className=\"card-title\">{savedbook.title}</h3>\r\n                    <h4 className=\"card-text\">Author: {savedbook.author}</h4>\r\n                    <h6 className=\"card-text\">{savedbook.description}</h6>\r\n                    <a href={savedbook.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    More details...\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className = \"row btnRow\">\r\n                <a href=\"/\">\r\n                <button className=\"backToSearchBtn btn btn-light viewBtn ml-auto mr-2\">\r\n                    Back to Search Page\r\n                  </button>\r\n                </a>\r\n\r\n                <button\r\n                  className=\"saveBook btn btn-light mr-3\"\r\n                  id={savedbook._id}\r\n                  onClick={() => props.handleDeleteButton(savedbook._id)}\r\n                >\r\n                  Delete Book\r\n                </button>\r\n                </div>\r\n                </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Saved;","import React from \"react\";\nimport { Container } from \"../Grid\";\nimport \"./style.css\";\n\nfunction Nav() {\n  return (\n\n    <nav className=\"navbar navbar-expand-lg navbar-dark\">\n      <Container>\n      <a className=\"navbar-brand\" href=\"/\">\n        GOOGLE BOOKS\n      </a>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNav\"\n        aria-controls=\"navbarNav\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon text-white\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul className=\"navbar-nav d-flex  ml-auto mt-2 mt-lg-0\">\n          {!window.location.href.includes(\"saved\") ? (\n            \"\"\n          ) : (\n          <li className=\"nav-item\" id=\"home\">\n            <a className=\"nav-link mr-4\" href=\"/\" id=\"btnSearch\">\n              Home\n            </a>\n          </li>\n          )}\n           {window.location.href.includes(\"/saved\") ? (\n            \"\"\n          ) : (\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"/saved\" id=\"btnSaved\">\n              View Saved Books\n            </a>\n          </li>\n          )}\n        </ul>\n      </div>\n      </Container>\n    </nav>\n    \n  );\n}\n\nexport default Nav;","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport { Container } from \"../components/Grid\";\r\nimport Saved from \"../components/Saved\";\r\nimport Nav from \"../components/Nav\";\r\n\r\nclass SaveBook extends Component {\r\n  state = {\r\n    savedBooks: [],\r\n  };\r\n\r\n  //get all books saved to the database\r\n  componentDidMount() {\r\n    API.getBooks()\r\n      .then((res) => this.setState({ savedBooks: res.data }))\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  //delete book by id\r\n  handleDeleteButton = (id) => {\r\n    API.deleteBook(id)\r\n      .then((res) => this.componentDidMount())\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <Nav/>\r\n        <Jumbotron/>\r\n\r\n        <Container>\r\n          <Saved\r\n            savedBooks={this.state.savedBooks}\r\n            handleDeleteButton={this.handleDeleteButton}\r\n          />\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SaveBook;","import React from \"react\";\nimport \"./style.css\";\n\nconst Form = (props) => {\n  return (\n    <form>\n      <div className=\"form-group row\">\n        <label className=\"BookSearchLabel\">\n          <h2 className=\"searchTitle ml-5\">Enter a Book Title or Author Name</h2>\n        </label>\n      </div>\n      <div className=\"form-group row\">\n        <input\n          className=\"form-control mx-auto input\"\n          value={props.search}\n          type=\"text\"\n          name=\"searchBook\"\n          placeholder=\"Pride & Prejudice\"\n          onChange={props.handleInputChange}\n        />\n      </div>\n      <div className=\"form-group row col-sm-12 justify-content-end\">\n        <button\n          type=\"submit\"\n          className=\"btn btn-light submitBtn mb-3 mr-2\"\n          onClick={props.handleFormSubmit}\n        >\n          Search\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Search = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"searchContainer\">\r\n        {props.books.map((book) => {\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"row no-gutters\">\r\n                <div className=\"col-sm-3\">\r\n                  <img \r\n                  key\r\n                  src={book.image} \r\n                  alt={book.title} \r\n                  className=\"img-fluid card-image mt-3\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-sm-9\">\r\n                  <div className=\"card-body\">\r\n                    <h3 className=\"card-title\">{book.title}</h3>\r\n                    <h4 className=\"card-text\">Written by {book.author}</h4>\r\n                    <h6 className=\"card-text\">{book.description}</h6>\r\n                    <a href={book.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    More details...\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n                \r\n                <button\r\n                  className=\"saveBook btn btn-light ml-auto mr-2\"\r\n                  id={book.id} \r\n                  onClick={(event) => props.handleSavedButton(event)}\r\n                > {book.buttonText}\r\n                </button>\r\n\r\n                <a href=\"/saved\">\r\n                <button className=\"viewSavedBtn btn btn-light ml-auto mr-3\">\r\n                View Saved Books\r\n                </button>\r\n                </a>\r\n\r\n              </div>\r\n            </div>\r\n            \r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Search;","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport { Container, Row, Col } from \"../components/Grid\";\r\nimport Form from \"../components/Form\";\r\nimport Search from \"../components/Search\";\r\nimport Nav from \"../components/Nav\";\r\n// import Footer from \"../components/Footer\"\r\n\r\nclass SearchBooks extends Component {\r\n  //initial state\r\n  state = {\r\n    search: \"Pride & Prejudice\",\r\n    books: [],\r\n    error: \"\",\r\n    message: \"\",\r\n  };\r\n\r\n  //function for search bar\r\n  handleInputChange = (event) => {\r\n    this.setState({ search: event.target.value });\r\n  };\r\n\r\n  //function for submit button on search form\r\n  handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    // once it clicks it connects to the google book api with the search value\r\n    API.getGoogleSearchBooks(this.state.search)\r\n      .then((res) => {\r\n        if (res.data.items === \"error\") {\r\n          throw new Error(res.data.items);\r\n        } else {\r\n          // store response in a array\r\n          let results = res.data.items;\r\n          //map through array\r\n          results = results.map((result) => {\r\n            //store each book in a new object\r\n            result = {\r\n              key: result.id,\r\n              id: result.id,\r\n              title: result.volumeInfo.title,\r\n              author: result.volumeInfo.authors,\r\n              description: result.volumeInfo.description,\r\n              image: result.volumeInfo.imageLinks.thumbnail,\r\n              link: result.volumeInfo.infoLink,\r\n              buttonText: \"Save Book\"\r\n            };\r\n            return result;\r\n          });\r\n          // reset state\r\n          this.setState({ books: results, error: \"\" });\r\n        }\r\n      })\r\n      .catch((err) => this.setState({ error: err.items }));\r\n  };\r\n\r\n  handleSavedButton = (event) => {\r\n    // console.log(event)\r\n    event.preventDefault();\r\n    console.log(this.state.books);\r\n    console.log(event.target.id);\r\n    let savedBooks = this.state.books.filter(\r\n      (book) => book.id === event.target.id\r\n    );\r\n    savedBooks = savedBooks[0];\r\n    console.log(savedBooks);\r\n    API.saveBook(savedBooks)\r\n      .then(this.setState({ books: this.state.books.map(book=>{\r\n        if (book.id === event.target.id){\r\n          return {\r\n            ...book, buttonText: \"Saved!\"\r\n          }\r\n        } else {\r\n          return book;\r\n        }\r\n      })\r\n     }))\r\n      .catch((err) => console.log(\"ERROR\", err));\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n      <Nav/>\r\n        <Jumbotron/>\r\n        <Container>\r\n          <Row>\r\n            <Col size=\"12\">\r\n              <Form\r\n                handleFormSubmit={this.handleFormSubmit}\r\n                handleInputChange={this.handleInputChange}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <br></br>\r\n        <Container>\r\n          <Search\r\n            books={this.state.books}\r\n            handleSavedButton={this.handleSavedButton}\r\n          />\r\n        </Container>\r\n        {/* <Footer/> */}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBooks;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Save from \"./pages/Save\";\nimport Search from \"./pages/Search\"\nimport \"./App.css\"\n\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={Search} />\n          <Route exact path=\"/saved\" component={Save} />\n          <Route exact path=\"/saved/:id\" component={Save} />\n          <Route component={NoMatch} /> \n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === \"localhost\" ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === \"[::1]\" ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export default function register() {\r\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener(\"load\", () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (!isLocalhost) {\r\n          // Is not local host. Just register service worker\r\n          registerValidSW(swUrl);\r\n        } else {\r\n          // This is running on localhost. Lets check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === \"installed\") {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the old content will have been purged and\r\n                // the fresh content will have been added to the cache.\r\n                // It's the perfect time to display a \"New content is\r\n                // available; please refresh.\" message in your web app.\r\n                console.log(\"New content is available; please refresh.\");\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log(\"Content is cached for offline use.\");\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error during service worker registration:\", error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        if (\r\n          response.status === 404 ||\r\n          response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          \"No internet connection found. App is running in offline mode.\"\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if (\"serviceWorker\" in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();"],"sourceRoot":""}