{"version":3,"sources":["utils/API.js","components/Jumbotron/index.js","components/Grid/index.js","components/SavedResult/index.js","pages/SaveBooks.js","components/SearchForm/index.js","components/SearchResult/index.js","pages/SearchBooks.js","pages/NoMatch.js","components/Nav/index.js","components/Footer/index.js","App.js","registerServiceWorker.js","index.js"],"names":["query","axios","get","id","delete","savedBooks","post","Jumbotron","children","className","Container","fluid","Row","Col","size","split","map","join","SavedResult","props","length","savedBook","title","key","_id","src","image","alt","authors","description","onClick","handleDeleteButton","href","link","target","SaveBook","Component","state","API","then","res","this","componentDidMount","catch","err","console","log","setState","data","render","SearchForm","value","search","type","name","placeholder","onChange","handleInputChange","handleFormSubmit","SearchResult","books","book","author","event","handleSavedButton","SearchBooks","error","message","preventDefault","items","Error","results","result","volumeInfo","imageLinks","thumbnail","infoLink","filter","alert","NoMatch","role","aria-label","Nav","Footer","App","exact","path","component","SaveBooks","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.101a51f7.chunk.js","sourcesContent":["import axios from \"axios\"; \r\n\r\nexport default {\r\n    // Get book from google search \r\n    getGoogleSearchBooks: function(query) {\r\n        return axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + query);\r\n    },\r\n  // Gets all books\r\n  getBooks: function() {\r\n    return axios.get(\"/api/books\");\r\n  },\r\n  // Gets the book with the given id\r\n  getBook: function(id) {\r\n    return axios.get(\"/api/books/\" + id);\r\n  },\r\n  // Deletes the book with the given id\r\n  deleteBook: function(id) {\r\n    return axios.delete(\"/api/books/\" + id);\r\n  },\r\n  // Saves a book to the database\r\n  saveBook: function(savedBooks) {\r\n    return axios.post(\"/api/books\", savedBooks);\r\n  }\r\n};","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Jumbotron({ children }) {\r\n    return (\r\n        <div className=\"jumbotron jumbotron-fluid d-flex align-items-center\">\r\n            <div className=\"container text-center\">\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Jumbotron;","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}","import React from \"react\";\r\nimport \"./style.css\";\r\nimport {Row, Col} from \"../Grid\";\r\n\r\nconst SavedResult = props => {\r\n    return (props.savedBooks.length === 0) ? (\r\n        <div className=\"card\">\r\n            <div className=\"card-body player\">\r\n                <div className=\"article\">\r\n                    <h3>Books that You Saved</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ):(\r\n        <div className=\"card\">\r\n            <div className=\"card-body player\">\r\n                <div className=\"article\">\r\n                    <h3>Books that You Saved</h3>\r\n                    {props.savedBooks.map(savedBook => {\r\n                        return (\r\n                            <li className=\"saved-list list-group-item\">\r\n                                <Row className=\"SearchResult\" id={savedBook.title + \"Card\"} key={savedBook._id}>\r\n                                    {/* col-3 show image of the book */}\r\n                                    <Col size=\"2\" className=\"bookImage\">\r\n                                        <img src={savedBook.image} alt={savedBook.title} />\r\n                                    </Col>\r\n                                    <Col size=\"1\" className=\"emptyCol\"/>\r\n                                    {/* col-9 show information of the book */}\r\n                                    <Col size=\"9\" className=\"bookInfo\">\r\n                                        <Row>\r\n                                            <h2 className=\"bookTitle\">{savedBook.title}</h2>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <h3 className=\"bookAuthor\">{savedBook.authors}</h3>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <p className=\"bookDescription\">{savedBook.description}</p>\r\n                                        </Row>\r\n                                    </Col>\r\n                                </Row>\r\n                                <br></br>\r\n                                <Row className=\"buttonDiv \">\r\n                                    <button className=\"deleteBook btn btn-danger\" id={savedBook._id} onClick={() => props.handleDeleteButton(savedBook._id)}>\r\n                                        Delete Book\r\n                                    </button>\r\n                                    <a href={savedBook.link} target=\"example\">\r\n                                        <button className=\"viewBook btn btn-success\">\r\n                                            View Book\r\n                                        </button>\r\n                                    </a>\r\n                                </Row>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default SavedResult","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport { Container} from \"../components/Grid\";\r\nimport SavedResult from \"../components/SavedResult\";\r\n\r\nclass SaveBook extends Component {\r\n    state = {\r\n        savedBooks: []\r\n    };\r\n\r\n    //when this component mounts, grab all books that were save to the database \r\n    componentDidMount() {\r\n        API.getBooks()\r\n            .then(res => this.setState({ savedBooks: res.data }))\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    //function to remove book by _id\r\n    handleDeleteButton = _id => {\r\n        API.deleteBook(_id)\r\n            .then(res => this.componentDidMount())\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container fluid className=\"container\">\r\n                <Jumbotron />\r\n                <Container>\r\n                    <SavedResult savedBooks={this.state.savedBooks} handleDeleteButton={this.handleDeleteButton} />\r\n                </Container>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SaveBook ","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst SearchForm = props => {\r\n    return (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"BookSearchLabel\"><h3>Search For Book</h3></label>\r\n                <br></br>\r\n                <input className=\"col-12 form-control\"\r\n                    value={props.search}\r\n                    type=\"text\"\r\n                    name=\"searchBook\"\r\n                    placeholder=\"Enter Book's Name\"\r\n                    onChange={props.handleInputChange}\r\n                />\r\n            </div>\r\n            <button type=\"submit\" className=\"submitBtn btn btn-primary\" onClick={props.handleFormSubmit}>\r\n                Submit\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default SearchForm","import React from \"react\";\r\nimport \"./style.css\";\r\nimport {Row, Col} from \"../Grid\"\r\n\r\nconst SearchResult = props => {\r\n    return (props.books.length === 0) ? (\r\n        <div className=\"card\">\r\n            <div className=\"card-body player\">\r\n                <div className=\"article\">\r\n                    <h3>Search Results</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) : (\r\n            <div className=\"card\">\r\n                <div className=\"card-body player\">\r\n                    <div className=\"article\">\r\n                        <h3>Search Results</h3>\r\n                        {props.books.map(book => {\r\n                            return (\r\n                                <li className=\"search-list list-group-item\">\r\n                                    <Row className=\"SearchResult row\" _id={book.title + \"Card\"} key={book._id}>\r\n                                        {/* col-3 show image of the book */}\r\n                                        <Col size=\"2\" className=\"bookImage\">\r\n                                            <img src={book.image} alt={book.title} />\r\n                                        </Col>\r\n                                        <Col size=\"1\" className=\"emptyCol\"/>\r\n                                        {/* col-9 show information of the book */}\r\n                                        <Col size=\"9\" className=\"bookInfo\">\r\n                                            <Row>\r\n                                                <h3 className=\"bookTitle\">{book.title}</h3>\r\n                                            </Row>\r\n                                            <Row>\r\n                                                <h4 className=\"bookAuthor\">{book.author}</h4>\r\n                                            </Row>\r\n                                            <Row>\r\n                                                <p className=\"bookDescription\">{book.description}</p>\r\n                                            </Row>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <br></br>\r\n                                    <Row className=\"buttonDiv \">\r\n                                        <button className=\"saveBook btn btn-primary\" _id={book._id} onClick={(event) => props.handleSavedButton(event)}>\r\n                                            Save Book\r\n                                        </button>\r\n                                        <a href={book.link} target=\"example\">\r\n                                            <button className=\"viewBook btn btn-success\">\r\n                                                View Book\r\n                                        </button>\r\n                                        </a>\r\n                                    </Row>\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\nexport default SearchResult","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport { Container, Row, Col } from \"../components/Grid\";\r\nimport SearchForm from \"../components/SearchForm\";\r\nimport SearchResult from \"../components/SearchResult\"\r\n\r\n\r\nclass SearchBooks extends Component {\r\n    //create state\r\n    state = {\r\n        search: \"\",\r\n        books: [],\r\n        error: \"\",\r\n        message: \"\"\r\n    };\r\n\r\n    //function to take value of what enter in the search bar\r\n    handleInputChange = event => {\r\n        this.setState({ search: event.target.value })\r\n    }\r\n\r\n    //function to control the submit button of the search form \r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        // once it clicks it connects to the google book api with the search value\r\n        API.getGoogleSearchBooks(this.state.search)\r\n            .then(res => {\r\n                if (res.data.items === \"error\") {\r\n                    throw new Error(res.data.items);\r\n                }\r\n                else {\r\n                    // store response in a array\r\n                    let results = res.data.items\r\n                    //map through the array \r\n                    results = results.map(result => {\r\n                        //store each book information in a new object \r\n                        result = {\r\n                            key: result._id,\r\n                            _id: result._id,\r\n                            title: result.volumeInfo.title,\r\n                            author: result.volumeInfo.authors,\r\n                            description: result.volumeInfo.description,\r\n                            image: result.volumeInfo.imageLinks.thumbnail,\r\n                            link: result.volumeInfo.infoLink\r\n                        }\r\n                        return result;\r\n                    })\r\n                    // reset the sate of the empty books array to the new arrays of objects with properties geting back from the response\r\n                    this.setState({ books: results, error: \"\" })\r\n                }\r\n            })\r\n            .catch(err => this.setState({ error: err.items }));\r\n    }\r\n\r\n    handleSavedButton = event => {\r\n        // console.log(event)\r\n        event.preventDefault();\r\n        console.log(this.state.books)\r\n        let savedBooks = this.state.books.filter(book => book._id === event.target._id)\r\n        savedBooks = savedBooks[0];\r\n        API.saveBook(savedBooks)\r\n            .then(this.setState({ message: alert(\"Your book is saved\") }))\r\n            .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <Container fluid>\r\n                <Jumbotron>\r\n                    <h1 className=\"text-white\">Find Your Favorite Books with GoogleBook API</h1>\r\n                </Jumbotron>\r\n                <Container>\r\n                    <Row>\r\n                        <Col size=\"12\">\r\n                            <SearchForm\r\n                                handleFormSubmit={this.handleFormSubmit}\r\n                                handleInputChange={this.handleInputChange}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                <br></br>\r\n                <Container>\r\n                    <SearchResult books={this.state.books} handleSavedButton={this.handleSavedButton} />\r\n                </Container>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default SearchBooks","import React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nfunction NoMatch() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1 className=\"text-white\">404 Page Not Found</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                🙄\n              </span>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NoMatch;","import React from \"react\";\r\n\r\nfunction Nav() {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-primary bg-primary\">\r\n            <a className=\"navbar-brand\" href=\"/\">\r\n                <h2 className=\"text-white\">Google book Search</h2>\r\n            </a>\r\n            <div id=\"navbarNav\">\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item\" _id=\"home\">\r\n                        <a className=\"nav-link\" href=\"/\"><button type=\"button\" className=\"btn btn-info text-white\">Search Books</button></a>\r\n                    </li>\r\n                    <li className=\"nav-item\" _id=\"report\">\r\n                        <a className=\"nav-link\" href=\"/saved\"><button type=\"button\" className=\"btn btn-warning text-white\">Saved Books</button></a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Footer = () => (\r\n\t<footer className = \"page-footer\">\r\n\t\t<div className = \"container-fluid text-center\">\r\n\t\t\t<p>Google Books - Y Waller</p>\r\n\t\t</div>\t\r\n\t</footer>\r\n);\r\n\r\nexport default Footer;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport SaveBooks from \"./pages/SaveBooks\";\nimport SearchBooks from \"./pages/SearchBooks\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Nav from \"./components/Nav\";\nimport Footer from \"./components/Footer\";\nimport \"./App.css\";\n\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Nav />\n        <Switch>\n          <Route exact path=\"/\" component={SearchBooks} />\n          <Route exact path=\"/saved\" component={SaveBooks} />\n          <Route exact path=\"/saved/:_id\" component={SaveBooks} />\n          <Route component={NoMatch} /> \n        </Switch>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === \"localhost\" ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === \"[::1]\" ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export default function register() {\r\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener(\"load\", () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (!isLocalhost) {\r\n          // Is not local host. Just register service worker\r\n          registerValidSW(swUrl);\r\n        } else {\r\n          // This is running on localhost. Lets check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === \"installed\") {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the old content will have been purged and\r\n                // the fresh content will have been added to the cache.\r\n                // It's the perfect time to display a \"New content is\r\n                // available; please refresh.\" message in your web app.\r\n                console.log(\"New content is available; please refresh.\");\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log(\"Content is cached for offline use.\");\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error during service worker registration:\", error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        if (\r\n          response.status === 404 ||\r\n          response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          \"No internet connection found. App is running in offline mode.\"\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if (\"serviceWorker\" in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App/>,document.getElementById('root'));\nregisterServiceWorker();"],"sourceRoot":""}