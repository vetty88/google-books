{"version":3,"sources":["utils/API.js","components/Jumbotron/index.js","components/Grid/index.js","components/SavedResult/index.js","pages/SaveBooks.js","components/SearchForm/index.js","components/SearchResult/index.js","pages/SearchBooks.js","pages/NoMatch.js","components/Nav/index.js","components/Footer/index.js","App.js","registerServiceWorker.js","index.js"],"names":["getBooks","query","axios","get","getBooks","getBook","id","deleteBook","delete","saveBook","savedBooks","post","then","response","console","log","catch","error","Jumbotron","children","className","Container","fluid","Row","Col","size","split","map","join","SavedResult","props","length","savedBook","title","src","image","alt","authors","description","_id","onClick","handleDeleteButton","href","link","target","SaveBook","state","API","res","componentDidMount","err","setState","data","this","Component","SearchForm","value","search","type","name","placeholder","onChange","handleInputChange","handleFormSubmit","SearchResult","books","book","author","event","handleSavedButton","SearchBooks","message","preventDefault","items","Error","results","result","key","volumeInfo","imageLinks","thumbnail","infoLink","filter","alert","NoMatch","role","aria-label","Nav","Footer","App","exact","path","component","SaveBooks","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.0e83ae82.chunk.js","sourcesContent":["import axios from \"axios\"; \r\n\r\nexport default {\r\n    // Get book from google search \r\n    getBooks: function(query) {\r\n        return axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + query);\r\n    },\r\n  // Gets all books\r\n  getSavedBooks: function() {\r\n    return axios.get(\"/api/books\");\r\n  },\r\n  // Gets the book with the given id\r\n  getBook: function(id) {\r\n    return axios.get(\"/api/books/\" + id);\r\n  },\r\n  // Deletes the book with the given id\r\n  deleteBook: function(id) {\r\n    return axios.delete(\"/api/books/\" + id);\r\n  },\r\n  // Saves a book to the database\r\n  saveBook: function(savedBooks) {\r\n    return axios.post(\"/api/books\", savedBooks);\r\n  }\r\n  (response => { \r\n    console.log(response)\r\n  })\r\n  .catch(error => {\r\n      console.log(error.response)\r\n  })\r\n}\r\n\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Jumbotron({ children }) {\r\n    return (\r\n        <div className=\"jumbotron jumbotron-fluid d-flex align-items-center\">\r\n            <div className=\"container text-center\">\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Jumbotron;","import React from \"react\";\r\n\r\n// Exporting the Container, Row, and Col components from this file\r\n\r\n// This Container component allows us to use a bootstrap container without worrying about class names\r\nexport function Container({ fluid, children }) {\r\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Row component lets us use a bootstrap row without having to think about class names\r\nexport function Row({ fluid, children }) {\r\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Col component lets us size bootstrap columns with less syntax\r\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\r\nexport function Col({ size, children }) {\r\n  return (\r\n    <div\r\n      className={size\r\n        .split(\" \")\r\n        .map(size => \"col-\" + size)\r\n        .join(\" \")}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport \"./style.css\";\r\nimport {Row, Col} from \"../Grid\";\r\n\r\nconst SavedResult = props => {\r\n    return (props.savedBooks.length === 0) ? (\r\n        <div className=\"card\">\r\n            <div className=\"card-body player\">\r\n                <div className=\"article\">\r\n                    <h3>Books that You Saved</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ):(\r\n        <div className=\"card\">\r\n            <div className=\"card-body player\">\r\n                <div className=\"article\">\r\n                    <h3>Books that You Saved</h3>\r\n                    {props.savedBooks.map(savedBook => {\r\n                        return (\r\n                            <li className=\"saved-list list-group-item\">\r\n                                <Row className=\"SearchResult\" id={savedBook.title + \"Card\"} key={savedBook._id}>\r\n                                    {/* col-3 show image of the book */}\r\n                                    <Col size=\"2\" className=\"bookImage\">\r\n                                        <img src={savedBook.image} alt={savedBook.title} />\r\n                                    </Col>\r\n                                    <Col size=\"1\" className=\"emptyCol\"/>\r\n                                    {/* col-9 show information of the book */}\r\n                                    <Col size=\"9\" className=\"bookInfo\">\r\n                                        <Row>\r\n                                            <h2 className=\"bookTitle\">{savedBook.title}</h2>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <h3 className=\"bookAuthor\">{savedBook.authors}</h3>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <p className=\"bookDescription\">{savedBook.description}</p>\r\n                                        </Row>\r\n                                    </Col>\r\n                                </Row>\r\n                                <br></br>\r\n                                <Row className=\"buttonDiv \">\r\n                                    <button className=\"deleteBook btn btn-danger\" id={savedBook._id} onClick={() => props.handleDeleteButton(savedBook._id)}>\r\n                                        Delete Book\r\n                                    </button>\r\n                                    <a href={savedBook.link} target=\"example\">\r\n                                        <button className=\"viewBook btn btn-success\">\r\n                                            View Book\r\n                                        </button>\r\n                                    </a>\r\n                                </Row>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default SavedResult","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport { Container} from \"../components/Grid\";\r\nimport SavedResult from \"../components/SavedResult\";\r\n\r\nclass SaveBook extends Component {\r\n    state = {\r\n        savedBooks: []\r\n    };\r\n\r\n    //when this component mounts, grab all books that were save to the database \r\n    componentDidMount() {\r\n        API.getBooks()\r\n            (res => this.setState({ savedBooks: res.data }))\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    //function to remove book by _id\r\n    handleDeleteButton = _id => {\r\n        API.deleteBook(_id)\r\n            (res => this.componentDidMount())\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container fluid className=\"container\">\r\n                <Jumbotron />\r\n                <Container>\r\n                    <SavedResult savedBooks={this.state.savedBooks} handleDeleteButton={this.handleDeleteButton} />\r\n                </Container>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SaveBook ","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst SearchForm = props => {\r\n    return (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"BookSearchLabel\"><h3>Search For Book</h3></label>\r\n                <br></br>\r\n                <input className=\"col-12 form-control\"\r\n                    value={props.search}\r\n                    type=\"text\"\r\n                    name=\"searchBook\"\r\n                    placeholder=\"Enter Book's Name\"\r\n                    onChange={props.handleInputChange}\r\n                />\r\n            </div>\r\n            <button type=\"submit\" className=\"submitBtn btn btn-primary\" onClick={props.handleFormSubmit}>\r\n                Submit\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default SearchForm","import React from \"react\";\r\nimport \"./style.css\";\r\nimport {Row, Col} from \"../Grid\"\r\n\r\nconst SearchResult = props => {\r\n    return (props.books.length === 0) ? (\r\n        <div className=\"card\">\r\n            <div className=\"card-body player\">\r\n                <div className=\"article\">\r\n                    <h3>Search Results</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) : (\r\n            <div className=\"card\">\r\n                <div className=\"card-body player\">\r\n                    <div className=\"article\">\r\n                        <h3>Search Results</h3>\r\n                        {props.books.map(book => {\r\n                            return (\r\n                                <li className=\"search-list list-group-item\">\r\n                                    <Row className=\"SearchResult row\" _id={book.title + \"Card\"} key={book._id}>\r\n                                        {/* col-3 show image of the book */}\r\n                                        <Col size=\"2\" className=\"bookImage\">\r\n                                            <img src={book.image} alt={book.title} />\r\n                                        </Col>\r\n                                        <Col size=\"1\" className=\"emptyCol\"/>\r\n                                        {/* col-9 show information of the book */}\r\n                                        <Col size=\"9\" className=\"bookInfo\">\r\n                                            <Row>\r\n                                                <h3 className=\"bookTitle\">{book.title}</h3>\r\n                                            </Row>\r\n                                            <Row>\r\n                                                <h4 className=\"bookAuthor\">{book.author}</h4>\r\n                                            </Row>\r\n                                            <Row>\r\n                                                <p className=\"bookDescription\">{book.description}</p>\r\n                                            </Row>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <br></br>\r\n                                    <Row className=\"buttonDiv \">\r\n                                        <button className=\"saveBook btn btn-primary\" _id={book._id} onClick={(event) => props.handleSavedButton(event)}>\r\n                                            Save Book\r\n                                        </button>\r\n                                        <a href={book.link} target=\"example\">\r\n                                            <button className=\"viewBook btn btn-success\">\r\n                                                View Book\r\n                                        </button>\r\n                                        </a>\r\n                                    </Row>\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\nexport default SearchResult","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport { Container, Row, Col } from \"../components/Grid\";\r\nimport SearchForm from \"../components/SearchForm\";\r\nimport SearchResult from \"../components/SearchResult\"\r\n\r\n\r\nclass SearchBooks extends Component {\r\n    //create state\r\n    state = {\r\n        search: \"\",\r\n        books: [],\r\n        error: \"\",\r\n        message: \"\"\r\n    };\r\n\r\n    //function to take value of what enter in the search bar\r\n    handleInputChange = event => {\r\n        this.setState({ search: event.target.value })\r\n    }\r\n\r\n    //function to control the submit button of the search form \r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        // once it clicks it connects to the google book api with the search value\r\n        API.getBooks(this.state.search)\r\n            (res => {\r\n                if (res.data.items === \"error\") {\r\n                    throw new Error(res.data.items);\r\n                }\r\n                else {\r\n                    // store response in a array\r\n                    let results = res.data.items\r\n                    //map through the array \r\n                    results = results.map(result => {\r\n                        //store each book information in a new object \r\n                        result = {\r\n                            key: result._id,\r\n                            _id: result._id,\r\n                            title: result.volumeInfo.title,\r\n                            author: result.volumeInfo.authors,\r\n                            description: result.volumeInfo.description,\r\n                            image: result.volumeInfo.imageLinks.thumbnail,\r\n                            link: result.volumeInfo.infoLink\r\n                        }\r\n                        return result;\r\n                    })\r\n                    // reset the sate of the empty books array to the new arrays of objects with properties geting back from the response\r\n                    this.setState({ books: results, error: \"\" })\r\n                }\r\n            })\r\n            .catch(err => this.setState({ error: err.items }));\r\n    }\r\n\r\n    handleSavedButton = event => {\r\n        // console.log(event)\r\n        event.preventDefault();\r\n        console.log(this.state.books)\r\n        let savedBooks = this.state.books.filter(book => book._id === event.target._id)\r\n        savedBooks = savedBooks[0];\r\n        API.saveBook(savedBooks)\r\n            (this.setState({ message: alert(\"Your book is saved\") }))\r\n            .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <Container fluid>\r\n                <Jumbotron>\r\n                    <h1 className=\"text-white\">Find Your Favorite Books with GoogleBook API</h1>\r\n                </Jumbotron>\r\n                <Container>\r\n                    <Row>\r\n                        <Col size=\"12\">\r\n                            <SearchForm\r\n                                handleFormSubmit={this.handleFormSubmit}\r\n                                handleInputChange={this.handleInputChange}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                <br></br>\r\n                <Container>\r\n                    <SearchResult books={this.state.books} handleSavedButton={this.handleSavedButton} />\r\n                </Container>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default SearchBooks","import React from \"react\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\n\r\nfunction NoMatch() {\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col size=\"md-12\">\r\n          <Jumbotron>\r\n            <h1 className=\"text-white\">404 Page Not Found</h1>\r\n            <h1>\r\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\r\n                🙄\r\n              </span>\r\n            </h1>\r\n          </Jumbotron>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default NoMatch;","import React from \"react\";\r\n\r\nfunction Nav() {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-primary bg-primary\">\r\n            <a className=\"navbar-brand\" href=\"/\">\r\n                <h2 className=\"text-white\">Google book Search</h2>\r\n            </a>\r\n            <div id=\"navbarNav\">\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item\" _id=\"home\">\r\n                        <a className=\"nav-link\" href=\"/\"><button type=\"button\" className=\"btn btn-info text-white\">Search Books</button></a>\r\n                    </li>\r\n                    <li className=\"nav-item\" _id=\"report\">\r\n                        <a className=\"nav-link\" href=\"/saved\"><button type=\"button\" className=\"btn btn-warning text-white\">Saved Books</button></a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Footer = () => (\r\n\t<footer className = \"page-footer\">\r\n\t\t<div className = \"container-fluid text-center\">\r\n\t\t\t<p>Google Books - Y Waller</p>\r\n\t\t</div>\t\r\n\t</footer>\r\n);\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport SaveBooks from \"./pages/SaveBooks\";\r\nimport SearchBooks from \"./pages/SearchBooks\";\r\nimport NoMatch from \"./pages/NoMatch\";\r\nimport Nav from \"./components/Nav\";\r\nimport Footer from \"./components/Footer\";\r\nimport \"./App.css\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Nav />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={SearchBooks} />\r\n          <Route exact path=\"/saved\" component={SaveBooks} />\r\n          <Route exact path=\"/saved/:_id\" component={SaveBooks} />\r\n          <Route component={NoMatch} /> \r\n        </Switch>\r\n        <Footer />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === \"localhost\" ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === \"[::1]\" ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export default function register() {\r\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener(\"load\", () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (!isLocalhost) {\r\n          // Is not local host. Just register service worker\r\n          registerValidSW(swUrl);\r\n        } else {\r\n          // This is running on localhost. Lets check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      (registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === \"installed\") {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the old content will have been purged and\r\n                // the fresh content will have been added to the cache.\r\n                // It's the perfect time to display a \"New content is\r\n                // available; please refresh.\" message in your web app.\r\n                console.log(\"New content is available; please refresh.\");\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log(\"Content is cached for offline use.\");\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error during service worker registration:\", error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      (response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        if (\r\n          response.status === 404 ||\r\n          response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready(registration => {\r\n            registration.unregister()(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          \"No internet connection found. App is running in offline mode.\"\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if (\"serviceWorker\" in navigator) {\r\n      navigator.serviceWorker.ready(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'));\r\nregisterServiceWorker();"],"sourceRoot":""}