{"version":3,"file":"reflection_capabilities.js","sourceRoot":"","sources":["../../../../../../packages/core/src/reflection/reflection_capabilities.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type, isType} from '../type';\nimport {global, stringify} from '../util';\nimport {ANNOTATIONS, PARAMETERS, PROP_METADATA} from '../util/decorators';\n\nimport {PlatformReflectionCapabilities} from './platform_reflection_capabilities';\nimport {GetterFn, MethodFn, SetterFn} from './types';\n\n\n/**\n * Attention: These regex has to hold even if the code is minified!\n */\nexport const DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nexport const INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\nexport const INHERITED_CLASS_WITH_CTOR =\n    /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\n\nexport class ReflectionCapabilities implements PlatformReflectionCapabilities {\n  private _reflect: any;\n\n  constructor(reflect?: any) { this._reflect = reflect || global['Reflect']; }\n\n  isReflectionEnabled(): boolean { return true; }\n\n  factory<T>(t: Type<T>): (args: any[]) => T { return (...args: any[]) => new t(...args); }\n\n  /** @internal */\n  _zipTypesAndAnnotations(paramTypes: any[], paramAnnotations: any[]): any[][] {\n    let result: any[][];\n\n    if (typeof paramTypes === 'undefined') {\n      result = new Array(paramAnnotations.length);\n    } else {\n      result = new Array(paramTypes.length);\n    }\n\n    for (let i = 0; i < result.length; i++) {\n      // TS outputs Object for parameters without types, while Traceur omits\n      // the annotations. For now we preserve the Traceur behavior to aid\n      // migration, but this can be revisited.\n      if (typeof paramTypes === 'undefined') {\n        result[i] = [];\n      } else if (paramTypes[i] != Object) {\n        result[i] = [paramTypes[i]];\n      } else {\n        result[i] = [];\n      }\n      if (paramAnnotations && paramAnnotations[i] != null) {\n        result[i] = result[i].concat(paramAnnotations[i]);\n      }\n    }\n    return result;\n  }\n\n  private _ownParameters(type: Type<any>, parentCtor: any): any[][]|null {\n    const typeStr = type.toString();\n    // If we have no decorators, we only have function.length as metadata.\n    // In that case, to detect whether a child class declared an own constructor or not,\n    // we need to look inside of that constructor to check whether it is\n    // just calling the parent.\n    // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n    // that sets 'design:paramtypes' to []\n    // if a class inherits from another class but has no ctor declared itself.\n    if (DELEGATE_CTOR.exec(typeStr) ||\n        (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n      return null;\n    }\n\n    // Prefer the direct API.\n    if ((<any>type).parameters && (<any>type).parameters !== parentCtor.parameters) {\n      return (<any>type).parameters;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    const tsickleCtorParams = (<any>type).ctorParameters;\n    if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n      // Newer tsickle uses a function closure\n      // Retain the non-function case for compatibility with older tsickle\n      const ctorParameters =\n          typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n      const paramTypes = ctorParameters.map((ctorParam: any) => ctorParam && ctorParam.type);\n      const paramAnnotations = ctorParameters.map(\n          (ctorParam: any) =>\n              ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators));\n      return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n    }\n\n    // API for metadata created by invoking the decorators.\n    const paramAnnotations = type.hasOwnProperty(PARAMETERS) && (type as any)[PARAMETERS];\n    const paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n        this._reflect.getOwnMetadata('design:paramtypes', type);\n    if (paramTypes || paramAnnotations) {\n      return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n    }\n\n    // If a class has no decorators, at least create metadata\n    // based on function.length.\n    // Note: We know that this is a real constructor as we checked\n    // the content of the constructor above.\n    return new Array((<any>type.length)).fill(undefined);\n  }\n\n  parameters(type: Type<any>): any[][] {\n    // Note: only report metadata if we have at least one class decorator\n    // to stay in sync with the static reflector.\n    if (!isType(type)) {\n      return [];\n    }\n    const parentCtor = getParentCtor(type);\n    let parameters = this._ownParameters(type, parentCtor);\n    if (!parameters && parentCtor !== Object) {\n      parameters = this.parameters(parentCtor);\n    }\n    return parameters || [];\n  }\n\n  private _ownAnnotations(typeOrFunc: Type<any>, parentCtor: any): any[]|null {\n    // Prefer the direct API.\n    if ((<any>typeOrFunc).annotations && (<any>typeOrFunc).annotations !== parentCtor.annotations) {\n      let annotations = (<any>typeOrFunc).annotations;\n      if (typeof annotations === 'function' && annotations.annotations) {\n        annotations = annotations.annotations;\n      }\n      return annotations;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    if ((<any>typeOrFunc).decorators && (<any>typeOrFunc).decorators !== parentCtor.decorators) {\n      return convertTsickleDecoratorIntoMetadata((<any>typeOrFunc).decorators);\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n      return (typeOrFunc as any)[ANNOTATIONS];\n    }\n    return null;\n  }\n\n  annotations(typeOrFunc: Type<any>): any[] {\n    if (!isType(typeOrFunc)) {\n      return [];\n    }\n    const parentCtor = getParentCtor(typeOrFunc);\n    const ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n    const parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n    return parentAnnotations.concat(ownAnnotations);\n  }\n\n  private _ownPropMetadata(typeOrFunc: any, parentCtor: any): {[key: string]: any[]}|null {\n    // Prefer the direct API.\n    if ((<any>typeOrFunc).propMetadata &&\n        (<any>typeOrFunc).propMetadata !== parentCtor.propMetadata) {\n      let propMetadata = (<any>typeOrFunc).propMetadata;\n      if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n        propMetadata = propMetadata.propMetadata;\n      }\n      return propMetadata;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    if ((<any>typeOrFunc).propDecorators &&\n        (<any>typeOrFunc).propDecorators !== parentCtor.propDecorators) {\n      const propDecorators = (<any>typeOrFunc).propDecorators;\n      const propMetadata = <{[key: string]: any[]}>{};\n      Object.keys(propDecorators).forEach(prop => {\n        propMetadata[prop] = convertTsickleDecoratorIntoMetadata(propDecorators[prop]);\n      });\n      return propMetadata;\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n      return (typeOrFunc as any)[PROP_METADATA];\n    }\n    return null;\n  }\n\n  propMetadata(typeOrFunc: any): {[key: string]: any[]} {\n    if (!isType(typeOrFunc)) {\n      return {};\n    }\n    const parentCtor = getParentCtor(typeOrFunc);\n    const propMetadata: {[key: string]: any[]} = {};\n    if (parentCtor !== Object) {\n      const parentPropMetadata = this.propMetadata(parentCtor);\n      Object.keys(parentPropMetadata).forEach((propName) => {\n        propMetadata[propName] = parentPropMetadata[propName];\n      });\n    }\n    const ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n    if (ownPropMetadata) {\n      Object.keys(ownPropMetadata).forEach((propName) => {\n        const decorators: any[] = [];\n        if (propMetadata.hasOwnProperty(propName)) {\n          decorators.push(...propMetadata[propName]);\n        }\n        decorators.push(...ownPropMetadata[propName]);\n        propMetadata[propName] = decorators;\n      });\n    }\n    return propMetadata;\n  }\n\n  hasLifecycleHook(type: any, lcProperty: string): boolean {\n    return type instanceof Type && lcProperty in type.prototype;\n  }\n\n  guards(type: any): {[key: string]: any} { return {}; }\n\n  getter(name: string): GetterFn { return <GetterFn>new Function('o', 'return o.' + name + ';'); }\n\n  setter(name: string): SetterFn {\n    return <SetterFn>new Function('o', 'v', 'return o.' + name + ' = v;');\n  }\n\n  method(name: string): MethodFn {\n    const functionBody = `if (!o.${name}) throw new Error('\"${name}\" is undefined');\n        return o.${name}.apply(o, args);`;\n    return <MethodFn>new Function('o', 'args', functionBody);\n  }\n\n  // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n  importUri(type: any): string {\n    // StaticSymbol\n    if (typeof type === 'object' && type['filePath']) {\n      return type['filePath'];\n    }\n    // Runtime type\n    return `./${stringify(type)}`;\n  }\n\n  resourceUri(type: any): string { return `./${stringify(type)}`; }\n\n  resolveIdentifier(name: string, moduleUrl: string, members: string[], runtime: any): any {\n    return runtime;\n  }\n  resolveEnum(enumIdentifier: any, name: string): any { return enumIdentifier[name]; }\n}\n\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations: any[]): any[] {\n  if (!decoratorInvocations) {\n    return [];\n  }\n  return decoratorInvocations.map(decoratorInvocation => {\n    const decoratorType = decoratorInvocation.type;\n    const annotationCls = decoratorType.annotationCls;\n    const annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n    return new annotationCls(...annotationArgs);\n  });\n}\n\nfunction getParentCtor(ctor: Function): Type<any> {\n  const parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n  const parentCtor = parentProto ? parentProto.constructor : null;\n  // Note: We always use `Object` as the null value\n  // to simplify checking later on.\n  return parentCtor || Object;\n}\n"]}