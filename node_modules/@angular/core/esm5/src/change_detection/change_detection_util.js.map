{"version":3,"file":"change_detection_util.js","sourceRoot":"","sources":["../../../../../../packages/core/src/change_detection/change_detection_util.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {getSymbolIterator, looseIdentical} from '../util';\n\nexport function devModeEqual(a: any, b: any): boolean {\n  const isListLikeIterableA = isListLikeIterable(a);\n  const isListLikeIterableB = isListLikeIterable(b);\n  if (isListLikeIterableA && isListLikeIterableB) {\n    return areIterablesEqual(a, b, devModeEqual);\n  } else {\n    const isAObject = a && (typeof a === 'object' || typeof a === 'function');\n    const isBObject = b && (typeof b === 'object' || typeof b === 'function');\n    if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n      return true;\n    } else {\n      return looseIdentical(a, b);\n    }\n  }\n}\n\n/**\n * Indicates that the result of a {@link Pipe} transformation has changed even though the\n * reference has not changed.\n *\n * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n * is stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n * @stable\n */\nexport class WrappedValue {\n  /** @deprecated from 5.3, use `unwrap()` instead - will switch to protected */\n  wrapped: any;\n\n  constructor(value: any) { this.wrapped = value; }\n\n  /** Creates a wrapped value. */\n  static wrap(value: any): WrappedValue { return new WrappedValue(value); }\n\n  /**\n   * Returns the underlying value of a wrapped value.\n   * Returns the given `value` when it is not wrapped.\n   **/\n  static unwrap(value: any): any { return WrappedValue.isWrapped(value) ? value.wrapped : value; }\n\n  /** Returns true if `value` is a wrapped value. */\n  static isWrapped(value: any): value is WrappedValue { return value instanceof WrappedValue; }\n}\n\n/**\n * Represents a basic change from a previous to a new value.\n * @stable\n */\nexport class SimpleChange {\n  constructor(public previousValue: any, public currentValue: any, public firstChange: boolean) {}\n\n  /**\n   * Check whether the new value is the first value assigned.\n   */\n  isFirstChange(): boolean { return this.firstChange; }\n}\n\nexport function isListLikeIterable(obj: any): boolean {\n  if (!isJsObject(obj)) return false;\n  return Array.isArray(obj) ||\n      (!(obj instanceof Map) &&      // JS Map are iterables but return entries as [k, v]\n       getSymbolIterator() in obj);  // JS Iterable have a Symbol.iterator prop\n}\n\nexport function areIterablesEqual(\n    a: any, b: any, comparator: (a: any, b: any) => boolean): boolean {\n  const iterator1 = a[getSymbolIterator()]();\n  const iterator2 = b[getSymbolIterator()]();\n\n  while (true) {\n    const item1 = iterator1.next();\n    const item2 = iterator2.next();\n    if (item1.done && item2.done) return true;\n    if (item1.done || item2.done) return false;\n    if (!comparator(item1.value, item2.value)) return false;\n  }\n}\n\nexport function iterateListLike(obj: any, fn: (p: any) => any) {\n  if (Array.isArray(obj)) {\n    for (let i = 0; i < obj.length; i++) {\n      fn(obj[i]);\n    }\n  } else {\n    const iterator = obj[getSymbolIterator()]();\n    let item: any;\n    while (!((item = iterator.next()).done)) {\n      fn(item.value);\n    }\n  }\n}\n\nexport function isJsObject(o: any): boolean {\n  return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n"]}