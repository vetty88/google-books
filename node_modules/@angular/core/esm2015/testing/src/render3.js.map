{"version":3,"file":"render3.js","sourceRoot":"","sources":["../../../../../packages/core/testing/src/render3.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA,MAAM,mBAAsB,IAAY,EAAE,OAAU;IAClD,MAAM,CAAC,UAAS,IAA8B;QAC5C,cAAc,EAAE,CAAC;QACjB,IAAI,WAAW,GAAQ,SAAS,CAAC;QACjC,EAAE,CAAC,CAAC,OAAO,OAAO,KAAK,UAAU,CAAC,CAAC,CAAC;YAClC,QAAQ,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;;;;YAI/B,IAAI,WAAW,GAAI,OAAe,EAAE,CAAC;YACrC,EAAE,CAAC,CAAC,WAAW,YAAY,OAAO,CAAC,CAAC,CAAC;gBACnC,WAAW,GAAG,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;aACjD;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,EAAE,CAAC;aACR;SACF;KACK,CAAC;CACV;AAED,IAAI,aAAa,GAAuB,SAAS,CAAC;AAClD,IAAI,0BAA0B,GAA2D,SAAS,CAAC;AACnG,IAAI,SAAS,GAA0B,SAAS,CAAC;AACjD,IAAI,0BAA0B,GAAG,CAAC,CAAC;WAOd,UAAS,MAAM;IAClC,EAAE,CAAC,CAAC,OAAO,MAAM,IAAI,QAAQ,IAAI,MAAM,CAAC,OAAO,IAAI,OAAO,OAAO,IAAI,UAAU,CAAC,CAAC,CAAC;QAChF,IAAI,CAAC;YACH,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SACxB;QAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;;SAEZ;KACF;;IAED,MAAM,CAAC,IAAI,CAAC;CACb;;;;;;AAVD,MAAM,MAAM,GAAQ,IAUlB,CAAC,QAAQ,CAAC,CAAC;;;;;AAMb,MAAM;IACJ,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;;QAEX,MAAM,MAAM,GAAG,MAAM,CAAC,YAAY,CAAC,EAAE,EAAE,kBAAkB,CAAC,CAAC;QAC3D,aAAa,GAAI,MAAc,CAAC,QAAQ,CAAC;QACxC,MAAc,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;;;;;QAK3C,AAJA,qCAAqC;QACrC,oJAAoJ;QACpJ,2EAA2E;QAC3E,kDAAkD;QACjD,MAAc,CAAC,KAAK,GAAG,IAAI,CAAC;QAC7B,SAAS,GAAI,MAAc,CAAC,IAAI,CAAC;QAChC,MAAc,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QAExC,0BAA0B,GAAI,MAAc,CAAC,qBAAqB,CAAC;QAClE,MAAc,CAAC,qBAAqB,GAAG,UAAS,EAAwB;YACvE,YAAY,CAAC,EAAE,CAAC,CAAC;YACjB,MAAM,CAAC,0BAA0B,EAAE,CAAC;SACrC,CAAC;KACH;CACF;;;;;AAMD,MAAM;IACJ,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;QACjB,MAAc,CAAC,QAAQ,GAAG,aAAa,CAAC;QACzC,aAAa,GAAG,SAAS,CAAC;KAC3B;IACD,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;QACb,MAAc,CAAC,IAAI,GAAG,SAAS,CAAC;QACjC,SAAS,GAAG,SAAS,CAAC;KACvB;IACD,EAAE,CAAC,CAAC,0BAA0B,CAAC,CAAC,CAAC;QAC9B,MAAc,CAAC,qBAAqB,GAAG,0BAA0B,CAAC;QACnE,0BAA0B,GAAG,SAAS,CAAC;KACxC;CACF;AAED,EAAE,CAAC,CAAC,OAAO,UAAU,IAAI,UAAU,CAAC;IAAC,UAAU,CAAC,cAAc,CAAC,CAAC;AAChE,EAAE,CAAC,CAAC,OAAO,SAAS,IAAI,UAAU,CAAC;IAAC,UAAU,CAAC,eAAe,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n* Wraps a function in a new function which sets up document and HTML for running a test.\n*\n* This function is intended to wrap an existing testing function. The wrapper\n* adds HTML to the `body` element of the `document` and subsequently tears it down.\n*\n* This function is intended to be used with `async await` and `Promise`s. If the wrapped\n* function returns a promise (or is `async`) then the teardown is delayed until that `Promise`\n* is resolved.\n*\n* On `node` this function detects if `document` is present and if not it will create one by\n* loading `domino` and installing it.\n*\n* Example:\n*\n* ```\n* describe('something', () => {\n*   it('should do something', withBody('<my-app></my-app>', async () => {\n*     const myApp = renderComponent(MyApp);\n*     await whenRendered(myApp);\n*     expect(getRenderedText(myApp)).toEqual('Hello World!');\n*   }));\n* });\n* ```\n*\n* @param html HTML which should be inserted into `body` of the `document`.\n* @param blockFn function to wrap. The function can return promise or be `async`.\n* @experimental\n*/\nexport function withBody<T>(html: string, blockFn: T): T {\n  return function(done: {(): void, fail(): void}) {\n    ensureDocument();\n    let returnValue: any = undefined;\n    if (typeof blockFn === 'function') {\n      document.body.innerHTML = html;\n      // TODO(i): I'm not sure why a cast is required here but otherwise I get\n      //   TS2349: Cannot invoke an expression whose type lacks a call signature. Type 'never' has\n      //   no compatible call signatures.\n      let blockReturn = (blockFn as any)();\n      if (blockReturn instanceof Promise) {\n        blockReturn = blockReturn.then(done, done.fail);\n      } else {\n        done();\n      }\n    }\n  } as any;\n}\n\nlet savedDocument: Document|undefined = undefined;\nlet savedRequestAnimationFrame: ((callback: FrameRequestCallback) => number)|undefined = undefined;\nlet savedNode: typeof Node|undefined = undefined;\nlet requestAnimationFrameCount = 0;\n\n/**\n * System.js uses regexp to look for `require` statements. `domino` has to be\n * extracted into a constant so that the regexp in the System.js does not match\n * and does not try to load domino in the browser.\n */\nconst domino: any = (function(domino) {\n  if (typeof global == 'object' && global.process && typeof require == 'function') {\n    try {\n      return require(domino);\n    } catch (e) {\n      // It is possible that we don't have domino available in which case just give up.\n    }\n  }\n  // Seems like we don't have domino, give up.\n  return null;\n})('domino');\n\n/**\n * Ensure that global has `Document` if we are in node.js\n * @experimental\n */\nexport function ensureDocument(): void {\n  if (domino) {\n    // we are in node.js.\n    const window = domino.createWindow('', 'http://localhost');\n    savedDocument = (global as any).document;\n    (global as any).document = window.document;\n    // Trick to avoid Event patching from\n    // https://github.com/angular/angular/blob/7cf5e95ac9f0f2648beebf0d5bd9056b79946970/packages/platform-browser/src/dom/events/dom_events.ts#L112-L132\n    // It fails with Domino with TypeError: Cannot assign to read only property\n    // 'stopImmediatePropagation' of object '#<Event>'\n    (global as any).Event = null;\n    savedNode = (global as any).Node;\n    (global as any).Node = domino.impl.Node;\n\n    savedRequestAnimationFrame = (global as any).requestAnimationFrame;\n    (global as any).requestAnimationFrame = function(cb: FrameRequestCallback): number {\n      setImmediate(cb);\n      return requestAnimationFrameCount++;\n    };\n  }\n}\n\n/**\n * Restore the state of `Document` between tests.\n * @experimental\n */\nexport function cleanupDocument(): void {\n  if (savedDocument) {\n    (global as any).document = savedDocument;\n    savedDocument = undefined;\n  }\n  if (savedNode) {\n    (global as any).Node = savedNode;\n    savedNode = undefined;\n  }\n  if (savedRequestAnimationFrame) {\n    (global as any).requestAnimationFrame = savedRequestAnimationFrame;\n    savedRequestAnimationFrame = undefined;\n  }\n}\n\nif (typeof beforeEach == 'function') beforeEach(ensureDocument);\nif (typeof afterEach == 'function') beforeEach(cleanupDocument);"]}