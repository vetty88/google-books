{"version":3,"file":"type.js","sourceRoot":"","sources":["../../../../packages/core/src/type.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAkBA,MAAM,CAAC,uBAAM,IAAI,GAAG,QAAQ,CAAC;;;;;AAE7B,MAAM,iBAAiB,CAAM;IAC3B,MAAM,CAAC,OAAO,CAAC,KAAK,UAAU,CAAC;CAChC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @whatItDoes Represents a type that a Component or other object is instances of.\n *\n * @description\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n * @stable\n */\nexport const Type = Function;\n\nexport function isType(v: any): v is Type<any> {\n  return typeof v === 'function';\n}\n\nexport interface Type<T> extends Function { new (...args: any[]): T; }\n"]}