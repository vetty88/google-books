{"version":3,"file":"entrypoint.js","sourceRoot":"","sources":["../../../../../packages/core/src/view/entrypoint.ts"],"names":[],"mappings":";;;;;;;;;;;AAQA,OAAO,EAAC,QAAQ,EAAC,MAAM,gBAAgB,CAAC;AAExC,OAAO,EAAC,eAAe,EAAc,MAAM,6BAA6B,CAAC;AAGzE,OAAO,EAAC,oBAAoB,EAAC,MAAM,YAAY,CAAC;AAChD,OAAO,EAA8C,QAAQ,EAAiB,MAAM,SAAS,CAAC;AAC9F,OAAO,EAAC,iBAAiB,EAAC,MAAM,QAAQ,CAAC;;;;;AAEzC,MAAM,2BAA2B,QAA0B;IACzD,oBAAoB,EAAE,CAAC;IACvB,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;CAC5C;;;;;;AAED,MAAM,gCAAgC,IAAe,EAAE,gBAAuC;IAC5F,oBAAoB,EAAE,CAAC;IACvB,MAAM,CAAC,QAAQ,CAAC,qBAAqB,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC;CAC/D;;;;AAED,MAAM;IACJ,oBAAoB,EAAE,CAAC;IACvB,MAAM,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC;CAClC;;;;;;;AAID,MAAM,gCACF,YAAuB,EAAE,mBAAgC,EACzD,UAAqC;IACvC,MAAM,CAAC,IAAI,gBAAgB,CAAC,YAAY,EAAE,mBAAmB,EAAE,UAAU,CAAC,CAAC;CAC5E;AAED,sBAAuB,SAAQ,eAAoB;;;;;;IACjD,YACoB,YAA+B,oBAAiC,EACxE;;;QAGV,KAAK,EAAE,CAAC;QAJU,eAAU,GAAV,UAAU;QAAqB,yBAAoB,GAApB,oBAAoB,CAAa;QACxE,wBAAmB,GAAnB,mBAAmB;KAI9B;;;;;IAED,MAAM,CAAC,cAA6B;QAClC,oBAAoB,EAAE,CAAC;QACvB,uBAAM,GAAG,GAAG,iBAAiB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QACxD,MAAM,CAAC,QAAQ,CAAC,iBAAiB,CAC7B,IAAI,CAAC,UAAU,EAAE,cAAc,IAAI,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,oBAAoB,EAAE,GAAG,CAAC,CAAC;KACvF;CACF","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {ComponentFactory} from '../linker/component_factory';\nimport {NgModuleFactory, NgModuleRef} from '../linker/ng_module_factory';\nimport {Type} from '../type';\n\nimport {initServicesIfNeeded} from './services';\nimport {NgModuleDefinitionFactory, ProviderOverride, Services, ViewDefinition} from './types';\nimport {resolveDefinition} from './util';\n\nexport function overrideProvider(override: ProviderOverride) {\n  initServicesIfNeeded();\n  return Services.overrideProvider(override);\n}\n\nexport function overrideComponentView(comp: Type<any>, componentFactory: ComponentFactory<any>) {\n  initServicesIfNeeded();\n  return Services.overrideComponentView(comp, componentFactory);\n}\n\nexport function clearOverrides() {\n  initServicesIfNeeded();\n  return Services.clearOverrides();\n}\n\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nexport function createNgModuleFactory(\n    ngModuleType: Type<any>, bootstrapComponents: Type<any>[],\n    defFactory: NgModuleDefinitionFactory): NgModuleFactory<any> {\n  return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n}\n\nclass NgModuleFactory_ extends NgModuleFactory<any> {\n  constructor(\n      public readonly moduleType: Type<any>, private _bootstrapComponents: Type<any>[],\n      private _ngModuleDefFactory: NgModuleDefinitionFactory) {\n    // Attention: this ctor is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    super();\n  }\n\n  create(parentInjector: Injector|null): NgModuleRef<any> {\n    initServicesIfNeeded();\n    const def = resolveDefinition(this._ngModuleDefFactory);\n    return Services.createNgModuleRef(\n        this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n  }\n}\n"]}