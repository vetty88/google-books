{"version":3,"file":"pure_expression.js","sourceRoot":"","sources":["../../../../../packages/core/src/view/pure_expression.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BindingDef, BindingFlags, NodeDef, NodeFlags, PureExpressionData, ViewData, asPureExpressionData} from './types';\nimport {calcBindingFlags, checkAndUpdateBinding} from './util';\n\nexport function purePipeDef(checkIndex: number, argCount: number): NodeDef {\n  // argCount + 1 to include the pipe as first arg\n  return _pureExpressionDef(NodeFlags.TypePurePipe, checkIndex, new Array(argCount + 1));\n}\n\nexport function pureArrayDef(checkIndex: number, argCount: number): NodeDef {\n  return _pureExpressionDef(NodeFlags.TypePureArray, checkIndex, new Array(argCount));\n}\n\nexport function pureObjectDef(checkIndex: number, propToIndex: {[p: string]: number}): NodeDef {\n  const keys = Object.keys(propToIndex);\n  const nbKeys = keys.length;\n  const propertyNames = new Array(nbKeys);\n  for (let i = 0; i < nbKeys; i++) {\n    const key = keys[i];\n    const index = propToIndex[key];\n    propertyNames[index] = key;\n  }\n\n  return _pureExpressionDef(NodeFlags.TypePureObject, checkIndex, propertyNames);\n}\n\nfunction _pureExpressionDef(\n    flags: NodeFlags, checkIndex: number, propertyNames: string[]): NodeDef {\n  const bindings: BindingDef[] = new Array(propertyNames.length);\n  for (let i = 0; i < propertyNames.length; i++) {\n    const prop = propertyNames[i];\n    bindings[i] = {\n      flags: BindingFlags.TypeProperty,\n      name: prop,\n      ns: null,\n      nonMinifiedName: prop,\n      securityContext: null,\n      suffix: null\n    };\n  }\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex,\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {},\n    ngContentIndex: -1,\n    childCount: 0, bindings,\n    bindingFlags: calcBindingFlags(bindings),\n    outputs: [],\n    element: null,\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n\nexport function createPureExpression(view: ViewData, def: NodeDef): PureExpressionData {\n  return {value: undefined};\n}\n\nexport function checkAndUpdatePureExpressionInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  const bindings = def.bindings;\n  let changed = false;\n  const bindLen = bindings.length;\n  if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0)) changed = true;\n  if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1)) changed = true;\n  if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2)) changed = true;\n  if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3)) changed = true;\n  if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4)) changed = true;\n  if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5)) changed = true;\n  if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6)) changed = true;\n  if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7)) changed = true;\n  if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8)) changed = true;\n  if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9)) changed = true;\n\n  if (changed) {\n    const data = asPureExpressionData(view, def.nodeIndex);\n    let value: any;\n    switch (def.flags & NodeFlags.Types) {\n      case NodeFlags.TypePureArray:\n        value = new Array(bindings.length);\n        if (bindLen > 0) value[0] = v0;\n        if (bindLen > 1) value[1] = v1;\n        if (bindLen > 2) value[2] = v2;\n        if (bindLen > 3) value[3] = v3;\n        if (bindLen > 4) value[4] = v4;\n        if (bindLen > 5) value[5] = v5;\n        if (bindLen > 6) value[6] = v6;\n        if (bindLen > 7) value[7] = v7;\n        if (bindLen > 8) value[8] = v8;\n        if (bindLen > 9) value[9] = v9;\n        break;\n      case NodeFlags.TypePureObject:\n        value = {};\n        if (bindLen > 0) value[bindings[0].name !] = v0;\n        if (bindLen > 1) value[bindings[1].name !] = v1;\n        if (bindLen > 2) value[bindings[2].name !] = v2;\n        if (bindLen > 3) value[bindings[3].name !] = v3;\n        if (bindLen > 4) value[bindings[4].name !] = v4;\n        if (bindLen > 5) value[bindings[5].name !] = v5;\n        if (bindLen > 6) value[bindings[6].name !] = v6;\n        if (bindLen > 7) value[bindings[7].name !] = v7;\n        if (bindLen > 8) value[bindings[8].name !] = v8;\n        if (bindLen > 9) value[bindings[9].name !] = v9;\n        break;\n      case NodeFlags.TypePurePipe:\n        const pipe = v0;\n        switch (bindLen) {\n          case 1:\n            value = pipe.transform(v0);\n            break;\n          case 2:\n            value = pipe.transform(v1);\n            break;\n          case 3:\n            value = pipe.transform(v1, v2);\n            break;\n          case 4:\n            value = pipe.transform(v1, v2, v3);\n            break;\n          case 5:\n            value = pipe.transform(v1, v2, v3, v4);\n            break;\n          case 6:\n            value = pipe.transform(v1, v2, v3, v4, v5);\n            break;\n          case 7:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n            break;\n          case 8:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n            break;\n          case 9:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n            break;\n          case 10:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            break;\n        }\n        break;\n    }\n    data.value = value;\n  }\n  return changed;\n}\n\nexport function checkAndUpdatePureExpressionDynamic(\n    view: ViewData, def: NodeDef, values: any[]): boolean {\n  const bindings = def.bindings;\n  let changed = false;\n  for (let i = 0; i < values.length; i++) {\n    // Note: We need to loop over all values, so that\n    // the old values are updates as well!\n    if (checkAndUpdateBinding(view, def, i, values[i])) {\n      changed = true;\n    }\n  }\n  if (changed) {\n    const data = asPureExpressionData(view, def.nodeIndex);\n    let value: any;\n    switch (def.flags & NodeFlags.Types) {\n      case NodeFlags.TypePureArray:\n        value = values;\n        break;\n      case NodeFlags.TypePureObject:\n        value = {};\n        for (let i = 0; i < values.length; i++) {\n          value[bindings[i].name !] = values[i];\n        }\n        break;\n      case NodeFlags.TypePurePipe:\n        const pipe = values[0];\n        const params = values.slice(1);\n        value = (<any>pipe.transform)(...params);\n        break;\n    }\n    data.value = value;\n  }\n  return changed;\n}\n"]}