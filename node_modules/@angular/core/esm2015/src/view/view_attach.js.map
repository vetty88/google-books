{"version":3,"file":"view_attach.js","sourceRoot":"","sources":["../../../../../packages/core/src/view/view_attach.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementData, NodeDef, NodeFlags, Services, ViewData, ViewDefinition, ViewState} from './types';\nimport {RenderNodeAction, declaredViewContainer, isComponentView, renderNode, visitRootRenderNodes} from './util';\n\nexport function attachEmbeddedView(\n    parentView: ViewData, elementData: ElementData, viewIndex: number | undefined | null,\n    view: ViewData) {\n  let embeddedViews = elementData.viewContainer !._embeddedViews;\n  if (viewIndex === null || viewIndex === undefined) {\n    viewIndex = embeddedViews.length;\n  }\n  view.viewContainerParent = parentView;\n  addToArray(embeddedViews, viewIndex !, view);\n  attachProjectedView(elementData, view);\n\n  Services.dirtyParentQueries(view);\n\n  const prevView = viewIndex ! > 0 ? embeddedViews[viewIndex ! - 1] : null;\n  renderAttachEmbeddedView(elementData, prevView, view);\n}\n\nfunction attachProjectedView(vcElementData: ElementData, view: ViewData) {\n  const dvcElementData = declaredViewContainer(view);\n  if (!dvcElementData || dvcElementData === vcElementData ||\n      view.state & ViewState.IsProjectedView) {\n    return;\n  }\n  // Note: For performance reasons, we\n  // - add a view to template._projectedViews only 1x throughout its lifetime,\n  //   and remove it not until the view is destroyed.\n  //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n  //    nested projected views as well, even accross component boundaries).\n  // - don't track the insertion order of views in the projected views array\n  //   (hard, as when the views of the same template are inserted different view containers)\n  view.state |= ViewState.IsProjectedView;\n  let projectedViews = dvcElementData.template._projectedViews;\n  if (!projectedViews) {\n    projectedViews = dvcElementData.template._projectedViews = [];\n  }\n  projectedViews.push(view);\n  // Note: we are changing the NodeDef here as we cannot calculate\n  // the fact whether a template is used for projection during compilation.\n  markNodeAsProjectedTemplate(view.parent !.def, view.parentNodeDef !);\n}\n\nfunction markNodeAsProjectedTemplate(viewDef: ViewDefinition, nodeDef: NodeDef) {\n  if (nodeDef.flags & NodeFlags.ProjectedTemplate) {\n    return;\n  }\n  viewDef.nodeFlags |= NodeFlags.ProjectedTemplate;\n  nodeDef.flags |= NodeFlags.ProjectedTemplate;\n  let parentNodeDef = nodeDef.parent;\n  while (parentNodeDef) {\n    parentNodeDef.childFlags |= NodeFlags.ProjectedTemplate;\n    parentNodeDef = parentNodeDef.parent;\n  }\n}\n\nexport function detachEmbeddedView(elementData: ElementData, viewIndex?: number): ViewData|null {\n  const embeddedViews = elementData.viewContainer !._embeddedViews;\n  if (viewIndex == null || viewIndex >= embeddedViews.length) {\n    viewIndex = embeddedViews.length - 1;\n  }\n  if (viewIndex < 0) {\n    return null;\n  }\n  const view = embeddedViews[viewIndex];\n  view.viewContainerParent = null;\n  removeFromArray(embeddedViews, viewIndex);\n\n  // See attachProjectedView for why we don't update projectedViews here.\n  Services.dirtyParentQueries(view);\n\n  renderDetachView(view);\n\n  return view;\n}\n\nexport function detachProjectedView(view: ViewData) {\n  if (!(view.state & ViewState.IsProjectedView)) {\n    return;\n  }\n  const dvcElementData = declaredViewContainer(view);\n  if (dvcElementData) {\n    const projectedViews = dvcElementData.template._projectedViews;\n    if (projectedViews) {\n      removeFromArray(projectedViews, projectedViews.indexOf(view));\n      Services.dirtyParentQueries(view);\n    }\n  }\n}\n\nexport function moveEmbeddedView(\n    elementData: ElementData, oldViewIndex: number, newViewIndex: number): ViewData {\n  const embeddedViews = elementData.viewContainer !._embeddedViews;\n  const view = embeddedViews[oldViewIndex];\n  removeFromArray(embeddedViews, oldViewIndex);\n  if (newViewIndex == null) {\n    newViewIndex = embeddedViews.length;\n  }\n  addToArray(embeddedViews, newViewIndex, view);\n\n  // Note: Don't need to change projectedViews as the order in there\n  // as always invalid...\n\n  Services.dirtyParentQueries(view);\n\n  renderDetachView(view);\n  const prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n  renderAttachEmbeddedView(elementData, prevView, view);\n\n  return view;\n}\n\nfunction renderAttachEmbeddedView(\n    elementData: ElementData, prevView: ViewData | null, view: ViewData) {\n  const prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode !) :\n                                    elementData.renderElement;\n  const parentNode = view.renderer.parentNode(prevRenderNode);\n  const nextSibling = view.renderer.nextSibling(prevRenderNode);\n  // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n  // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n  visitRootRenderNodes(view, RenderNodeAction.InsertBefore, parentNode, nextSibling, undefined);\n}\n\nexport function renderDetachView(view: ViewData) {\n  visitRootRenderNodes(view, RenderNodeAction.RemoveChild, null, null, undefined);\n}\n\nfunction addToArray(arr: any[], index: number, value: any) {\n  // perf: array.push is faster than array.splice!\n  if (index >= arr.length) {\n    arr.push(value);\n  } else {\n    arr.splice(index, 0, value);\n  }\n}\n\nfunction removeFromArray(arr: any[], index: number) {\n  // perf: array.pop is faster than array.splice!\n  if (index >= arr.length - 1) {\n    arr.pop();\n  } else {\n    arr.splice(index, 1);\n  }\n}\n"]}